<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kcc.reviewservice.mapper.RestaurantMapper">

    <resultMap id="restaurantMap" type="Restaurant">
        <id property="id" column="rest_id"/>
        <result property="name" column="rest_name"/>
        <result property="address" column="address"/>
        <result property="created_at" column="rest_created_at"/>
        <result property="updated_at" column="rest_updated_at"/>
        <collection property="menus" resultMap="menuMap"/>
        <collection property="reviews" resultMap="reviewMap"/>
    </resultMap>
    
    <resultMap id="menuMap" type="RestaurantMenu">
        <id property="id" column="menu_id"/>
        <result property="restaurant_id" column="restaurant_id"/>
        <result property="name" column="menu_name"/>
        <result property="price" column="price"/>
        <result property="created_at" column="menu_created_at"/>
        <result property="updated_at" column="menu_updated_at"/>
    </resultMap>

    <resultMap id="reviewMap" type="Review">
        <id property="id" column="review_id"/>
        <result property="restaurant_id" column="review_restaurant_id"/>
        <result property="content" column="content"/>
        <result property="score" column="score"/>
        <result property="created_at" column="review_created_at"/>
    </resultMap>

    <select id="findAllrestaurant" resultMap="restaurantMap">
        select
            id as rest_id,
            name as rest_name,
            address,
            created_at as rest_created_at,
            updated_at as rest_updated_at
        from restaurant
    </select>


    <select id="infoRestaurant" resultMap="restaurantMap">
        select r.id         as rest_id,
               r.name       as rest_name,
               r.address    as address,
               r.created_at as rest_created_at,
               r.updated_at as rest_updated_at,
               m.id         as menu_id,
               m.name       as menu_name,
               m.price      as price,
               m.created_at as menu_created_at,
               m.updated_at as menu_updated_at
        from restaurant r
        left outer join restaurant_menu m
        on r.id = m.restaurant_id
        where r.id = #{id}
    </select>

    <insert id="createRestaurant" parameterType="Restaurant">
        insert into restaurant(id, name, address, created_at, updated_at)
        values(restaurant_seq.nextval, #{name}, #{address}, sysdate, sysdate)
    </insert>

    <delete id="deleteRestaurant">
        delete from restaurant where #{id} = id
    </delete>

    <update id="modifyRestaurant">
        update restaurant
        set name = #{name},
        address = #{address},
        updated_at = sysdate
        where id = #{id}
    </update>

    <select id="avgScore" resultType="int">
        select
            floor(avg(score)) as avgScore
        from review
        where restaurant_id = #{id}
    </select>

    <select id="reviews" resultMap="reviewMap">
        select id as review_id,
               restaurant_id as review_restaurant_id,
               content,
               score,
               created_at as review_created_at
        from review
        where #{id} = restaurant_id
    </select>

</mapper>